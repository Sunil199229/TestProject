//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dynamicField.FormWihtMasterPage
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Ankit_PracticeEntities : DbContext
    {
        public Ankit_PracticeEntities()
            : base("name=Ankit_PracticeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }

        public virtual DbSet<PL.PL_model> pl_model { get; set; }

        public virtual DbSet<PRODUCT> PRODUCTs { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<Student1> Students1 { get; set; }
        public virtual DbSet<SystemShow> SystemShows { get; set; }
        public virtual DbSet<tbl_City> tbl_City { get; set; }
        public virtual DbSet<tbl_Country> tbl_Country { get; set; }
        public virtual DbSet<tbl_Designation> tbl_Designation { get; set; }
        public virtual DbSet<tbl_Favorite> tbl_Favorite { get; set; }
        public virtual DbSet<tbl_Gender> tbl_Gender { get; set; }
        public virtual DbSet<tbl_Linq> tbl_Linq { get; set; }
        public virtual DbSet<tbl_State> tbl_State { get; set; }
        public virtual DbSet<UserTable> UserTables { get; set; }
        public virtual DbSet<MstOrganization> MstOrganizations { get; set; }
        public virtual DbSet<MstUser> MstUsers { get; set; }
    
        public virtual int Sp_Menus(Nullable<int> ind, Nullable<int> interfaceCode, Nullable<int> levelCode, Nullable<int> menuHeaderID, Nullable<int> menuItemID)
        {
            var indParameter = ind.HasValue ?
                new ObjectParameter("Ind", ind) :
                new ObjectParameter("Ind", typeof(int));
    
            var interfaceCodeParameter = interfaceCode.HasValue ?
                new ObjectParameter("InterfaceCode", interfaceCode) :
                new ObjectParameter("InterfaceCode", typeof(int));
    
            var levelCodeParameter = levelCode.HasValue ?
                new ObjectParameter("LevelCode", levelCode) :
                new ObjectParameter("LevelCode", typeof(int));
    
            var menuHeaderIDParameter = menuHeaderID.HasValue ?
                new ObjectParameter("MenuHeaderID", menuHeaderID) :
                new ObjectParameter("MenuHeaderID", typeof(int));
    
            var menuItemIDParameter = menuItemID.HasValue ?
                new ObjectParameter("MenuItemID", menuItemID) :
                new ObjectParameter("MenuItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Menus", indParameter, interfaceCodeParameter, levelCodeParameter, menuHeaderIDParameter, menuItemIDParameter);
        }
    
        public virtual ObjectResult<SP_Product_Result> SP_Product(Nullable<int> ind, Nullable<int> isAND, Nullable<int> productId, string productName, string size, Nullable<decimal> price, Nullable<System.DateTime> mfgDate, string category)
        {
            var indParameter = ind.HasValue ?
                new ObjectParameter("Ind", ind) :
                new ObjectParameter("Ind", typeof(int));
    
            var isANDParameter = isAND.HasValue ?
                new ObjectParameter("IsAND", isAND) :
                new ObjectParameter("IsAND", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var mfgDateParameter = mfgDate.HasValue ?
                new ObjectParameter("MfgDate", mfgDate) :
                new ObjectParameter("MfgDate", typeof(System.DateTime));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Product_Result>("SP_Product", indParameter, isANDParameter, productIdParameter, productNameParameter, sizeParameter, priceParameter, mfgDateParameter, categoryParameter);
        }
    
        public virtual ObjectResult<string> Sp_Student(Nullable<int> ind, Nullable<int> student_Id, string name, string address, string dOB, string age, string gender, string mobileNo, string gmailId, string qualification, string favorite)
        {
            var indParameter = ind.HasValue ?
                new ObjectParameter("Ind", ind) :
                new ObjectParameter("Ind", typeof(int));
    
            var student_IdParameter = student_Id.HasValue ?
                new ObjectParameter("Student_Id", student_Id) :
                new ObjectParameter("Student_Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var gmailIdParameter = gmailId != null ?
                new ObjectParameter("GmailId", gmailId) :
                new ObjectParameter("GmailId", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            var favoriteParameter = favorite != null ?
                new ObjectParameter("Favorite", favorite) :
                new ObjectParameter("Favorite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Sp_Student", indParameter, student_IdParameter, nameParameter, addressParameter, dOBParameter, ageParameter, genderParameter, mobileNoParameter, gmailIdParameter, qualificationParameter, favoriteParameter);
        }
    
        public virtual ObjectResult<Sp_Students_Result> Sp_Students(Nullable<int> ind, Nullable<int> student_Id, string name, string address, Nullable<System.DateTime> dOB, string age, string gender, string mobileNo, string gmailId, string qualification, string favorite)
        {
            var indParameter = ind.HasValue ?
                new ObjectParameter("Ind", ind) :
                new ObjectParameter("Ind", typeof(int));
    
            var student_IdParameter = student_Id.HasValue ?
                new ObjectParameter("Student_Id", student_Id) :
                new ObjectParameter("Student_Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var ageParameter = age != null ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var gmailIdParameter = gmailId != null ?
                new ObjectParameter("GmailId", gmailId) :
                new ObjectParameter("GmailId", typeof(string));
    
            var qualificationParameter = qualification != null ?
                new ObjectParameter("Qualification", qualification) :
                new ObjectParameter("Qualification", typeof(string));
    
            var favoriteParameter = favorite != null ?
                new ObjectParameter("Favorite", favorite) :
                new ObjectParameter("Favorite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Students_Result>("Sp_Students", indParameter, student_IdParameter, nameParameter, addressParameter, dOBParameter, ageParameter, genderParameter, mobileNoParameter, gmailIdParameter, qualificationParameter, favoriteParameter);
        }
    
        public virtual ObjectResult<SpLogin_Result> SpLogin(Nullable<int> ind, string username, string password)
        {
            var indParameter = ind.HasValue ?
                new ObjectParameter("ind", ind) :
                new ObjectParameter("ind", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpLogin_Result>("SpLogin", indParameter, usernameParameter, passwordParameter);
        }
    }
}
